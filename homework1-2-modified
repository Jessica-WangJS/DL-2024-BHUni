{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPNLjZ0W22zeotAcr//LFJs"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IteECxayRuJ9","executionInfo":{"status":"ok","timestamp":1712556349684,"user_tz":-480,"elapsed":87348,"user":{"displayName":"Jin Liu","userId":"06978744939260647893"}},"outputId":"65f5077d-385d-4d0e-96ca-3f969b3056d6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at ./mount; to attempt to forcibly remount, call drive.mount(\"./mount\", force_remount=True).\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/inf-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/飞狐外传-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/连城诀-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/鹿鼎记-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/三十三剑客图-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/射雕英雄传-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/神雕侠侣-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/天龙八部-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/书剑恩仇录-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/侠客行-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/雪山飞狐-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/笑傲江湖-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/鸳鸯刀-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/越女剑-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/倚天屠龙记-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/白马啸西风-replaced.txt\n","处理完成，已将结果写入到 ./mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/碧血剑-replaced.txt\n","File 1:\n","Word entropy is: 12.759517886823565\n","Character entropy is: 9.190210046557297\n","File 2:\n","Word entropy is: 4.459431618637295\n","Character entropy is: 5.207535698378018\n","File 3:\n","Word entropy is: 12.715681464080182\n","Character entropy is: 9.269605854306342\n","File 4:\n","Word entropy is: 12.223229518718805\n","Character entropy is: 9.07807871913946\n","File 5:\n","Word entropy is: 12.58335997919867\n","Character entropy is: 9.651651280304124\n","File 6:\n","Word entropy is: 13.156015980420595\n","Character entropy is: 9.349515227529647\n","File 7:\n","Word entropy is: 13.05897060300151\n","Character entropy is: 9.306378427026766\n","File 8:\n","Word entropy is: 13.145151142104776\n","Character entropy is: 9.314970230882109\n","File 9:\n","Word entropy is: 12.83134920337048\n","Character entropy is: 9.411749154229593\n","File 10:\n","Word entropy is: 12.348068195953921\n","Character entropy is: 9.068521234688575\n","File 11:\n","Word entropy is: 12.136837089290893\n","Character entropy is: 9.141201133306588\n","File 12:\n","Word entropy is: 12.671316793207254\n","Character entropy is: 9.153682842854911\n","File 13:\n","Word entropy is: 11.184430641476904\n","Character entropy is: 8.752468176285632\n","File 14:\n","Word entropy is: 10.428510408737337\n","Character entropy is: 8.55371042151725\n","File 15:\n","Word entropy is: 13.01987333755111\n","Character entropy is: 9.333494170384512\n","File 16:\n","Word entropy is: 11.244165956600524\n","Character entropy is: 8.611245181346998\n","File 17:\n","Word entropy is: 12.947128017868032\n","Character entropy is: 9.408226624190922\n","\n","Average word entropy: 11.936061049237756\n","Average character entropy: 8.929543789584041\n"]}],"source":["from google.colab import drive\n","drive.mount('./mount')\n","\n","import os\n","import math\n","import jieba\n","from collections import Counter\n","\n","def calculate_entropy(tokens):\n","    total_tokens = len(tokens)\n","    if total_tokens == 0:\n","        return 0.0  # Return zero entropy if tokens list is empty\n","    token_counts = Counter(tokens)\n","    entropy = 0.0\n","    for count in token_counts.values():\n","        probability = count / total_tokens\n","        entropy -= probability * math.log2(probability)\n","    return entropy\n","\n","def isfloat(s):\n","    try:\n","        float(s)\n","        return True\n","    except ValueError:\n","        return False\n","\n","def preprocess_files(folder_path):\n","    for filename in os.listdir(folder_path):\n","        if filename.endswith('.txt') and '-replaced' not in filename:\n","            input_file_path = os.path.join(folder_path, filename)\n","            output_file_path = input_file_path.replace('.txt', '-replaced.txt')\n","\n","            with open(input_file_path, 'rb') as input_file:\n","                byte_data = input_file.read()\n","\n","            decoded_text_replace = byte_data.decode('gbk', errors='ignore')\n","\n","            with open(output_file_path, 'w', encoding='utf-8') as output_file:\n","                output_file.write(decoded_text_replace)\n","\n","            print(f\"处理完成，已将结果写入到 {output_file_path}\")\n","\n","def readcorpus(folder_path):\n","    word_entropies = []\n","    char_entropies = []\n","\n","    for filename in os.listdir(folder_path):\n","        if filename.endswith('-replaced.txt'):\n","            file_path = os.path.join(folder_path, filename)\n","\n","            with open(file_path, 'r', encoding='utf-8') as file:\n","                corpus = file.read()\n","\n","            # by word\n","            o_word_tokens = jieba.lcut(corpus)\n","            # by char\n","            o_char_tokens = list(corpus)\n","\n","            # remove irrelevant content\n","            word_tokens = []\n","            char_tokens = []\n","\n","            for word_token in o_word_tokens:\n","                if len(word_token) == 1 or word_token in ['\\n', '。', '？', '！', '，', '；', '：'] or word_token.isdigit() or isfloat(word_token):\n","                    continue\n","                else:\n","                    word_tokens.append(word_token)\n","\n","            for char_token in o_char_tokens:\n","                if char_token in ['\\n', '。', '？', '！', '，', '；', '：'] or char_token.isdigit() or isfloat(char_token):\n","                    continue\n","                else:\n","                    char_tokens.append(char_token)\n","\n","            word_entropy = calculate_entropy(word_tokens)\n","            char_entropy = calculate_entropy(char_tokens)\n","\n","            word_entropies.append(word_entropy)\n","            char_entropies.append(char_entropy)\n","\n","    return word_entropies, char_entropies\n","\n","# Folder path containing text files\n","folder_path = './mount/My Drive/Colab Notebooks/BH/1-2/DL/1/chinese_corpus/'\n","\n","# Preprocess files\n","preprocess_files(folder_path)\n","\n","# Calculate entropies\n","word_entropies, char_entropies = readcorpus(folder_path)\n","\n","# Output entropies for each file\n","for i, (word_entropy, char_entropy) in enumerate(zip(word_entropies, char_entropies)):\n","    print(f\"File {i+1}:\")\n","    print(\"Word entropy is:\", word_entropy)\n","    print(\"Character entropy is:\", char_entropy)\n","\n","# Calculate average entropies\n","avg_word_entropy = sum(word_entropies) / len(word_entropies)\n","avg_char_entropy = sum(char_entropies) / len(char_entropies)\n","\n","print(\"\\nAverage word entropy:\", avg_word_entropy)\n","print(\"Average character entropy:\", avg_char_entropy)\n"]}]}